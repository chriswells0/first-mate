apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "first-mate.fullname" . }}
  labels:
    {{- include "first-mate.labels" . | nindent 4 }}
spec:
  jobTemplate:
    metadata:
      name: {{ include "first-mate.fullname" . }}
    spec:
      template:
        metadata:
          {{- with .Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "first-mate.serviceAccountName" . }}
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: {{ .Chart.Name }}
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              resources:
                {{- toYaml .Values.resources | nindent 16 }}
              command:
                - sh
                - -c
                - |
                  #!/bin/sh

                  splitContainerNameAndImage() {
                    CONTAINER=$(echo $1 | sed 's/"//g')
                    IMAGE=$(echo "$2" | sed 's/"//g' | sed -E 's/:.+//')
                    IMAGE_LABEL=$(echo "$2" | sed 's/"//g' | sed -E 's/[^:]+://')
                  }

                  {{- if not .Values.namespaces }}
                  NAMESPACES="{{ .Release.Namespace }}"
                  {{- else if .Values.namespaces.monitored }}
                  NAMESPACES="{{ join " " .Values.namespaces.monitored }}"
                  {{- else }}
                  NAMESPACES="$(kubectl get namespaces -o json | jq '.items[] | .metadata.name' | sed 's/"//g')"
                  {{- end }}
                  echo "NAMESPACES:
                  ${NAMESPACES}"

                  # export KUBECONFIG=/usr/home/chris/Projects/Network/Cloud/vagrant-dev/configs/config
                  # export KUBECONFIG=~/.kube/vke-personal.yaml

                  for NAMESPACE in ${NAMESPACES}; do
                    echo "
                  NAMESPACE: ${NAMESPACE}"
                    {{- if .Values.namespaces }}
                      {{- if .Values.namespaces.ignored }}
                        {{- range $ignoredNamespace := .Values.namespaces.ignored }}
                    if [ "${NAMESPACE}" = "{{ $ignoredNamespace }}" ]; then
                      echo "Ignoring namespace: ${NAMESPACE}"
                      continue
                    fi
                        {{- end }}
                      {{- end }}
                    {{- end }}

                    CONTROLLERS=$(kubectl -n ${NAMESPACE} get {{ join "," .Values.controllerKinds }} -o json | jq '.items[] | "\(.kind)/\(.metadata.name)"' | sed 's/"//g')
                    echo "CONTROLLERS:
                  ${CONTROLLERS}"
                    for CONTROLLER in ${CONTROLLERS}; do
                      echo "
                  Controller: ${CONTROLLER}"
                      CONTAINER_NAMES_IMAGES=$(kubectl -n ${NAMESPACE} get ${CONTROLLER} -o json | jq '.spec.template.spec.containers[] | "\(.name) \(.image)"')
                      for CONTAINER_NAME_IMAGE in "${CONTAINER_NAMES_IMAGES}"; do
                        # echo "CONTAINER_NAME_IMAGE: ${CONTAINER_NAME_IMAGE}"
                        splitContainerNameAndImage ${CONTAINER_NAME_IMAGE}
                        echo "Container: ${CONTAINER}"
                        echo "Image: ${IMAGE}"
                        echo "Label: ${IMAGE_LABEL}"
                        {{- range $ignoredVersion := .Values.ignoredVersions }}
                        if [ "${IMAGE_LABEL}" = "{{ $ignoredVersion }}" ]; then
                          echo "Skipping ignored version: {{ $ignoredVersion }}"
                          continue
                        fi
                        {{- end }}
                        IMAGE_MAJOR=$(echo ${IMAGE_LABEL} | grep -Eo '^[^.]+')

                        UPDATED=false
                        LATEST_TAGS=$(curl -s https://hub.docker.com/v2/repositories/${IMAGE}/tags?page_size=25 | jq '.results | map(select((.name | test("^[0-9.]+$")) and (.images[].architecture == "amd64")))[] | .name' | sed 's/"//g')
                        for TAG in ${LATEST_TAGS}; do
                          if [ "${IMAGE_LABEL}" = "${TAG}" ]; then
                            echo "Label and tag are the same: ${TAG}"
                            continue
                          {{- range $ignoredVersion := .Values.ignoredVersions }}
                          elif [ "${TAG}" = "{{ $ignoredVersion }}" ]; then
                            echo "Skipping ignored version: {{ $ignoredVersion }}"
                            continue
                          {{- end }}
                          fi
                          TAG_MAJOR=$(echo ${TAG} | grep -Eo '^[^.]+')
                          if [ "${IMAGE_MAJOR}" = "${TAG_MAJOR}" ]; then # Only update within the same major version.
                            if [ $(/semver.sh ${IMAGE_LABEL} ${TAG}) = "-1" ]; then
                              echo "Update: ${TAG}"
                              kubectl -n ${NAMESPACE} set image ${CONTROLLER} ${CONTAINER}=${IMAGE}:${TAG}
                              UPDATED=true
                              break
                            fi
                          fi
                        done
                        if [ "$UPDATED" = 'false' ]; then
                          echo 'No update found: already at the latest version.'
                        fi
                      done
                    done
                  done

                  exit 0

          restartPolicy: {{ .Values.restartPolicy }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
  schedule: {{ .Values.schedule | quote }}
