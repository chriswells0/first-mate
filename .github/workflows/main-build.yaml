name: Main Build

on:
  push:
    branches: [ main ]
    paths:
      - image/**
      - chart/**

jobs:

  build-publish-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        # Use the GITHUB_TOKEN so the git push WILL NOT trigger any workflows (e.g., this same workflow).
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Increment the current patch version
        run: |
          OLD_VERSION=$(awk '$1 == "version:" { print $2; }' chart/first-mate/Chart.yaml)
          OLD_VERSION_MAJOR_MINOR=$(echo ${OLD_VERSION} | sed -E 's/\.-?[0-9]+$//')
          OLD_VERSION_PATCH=$(echo ${OLD_VERSION} | sed -E 's/([0-9.]+)(-?[0-9]+)$/\2/')
          NEW_VERSION=${OLD_VERSION_MAJOR_MINOR}.$((${OLD_VERSION_PATCH}+1))
          echo "NEW_VERSION=${NEW_VERSION}" >> ${GITHUB_ENV}
      - name: Build the Docker image
        run: docker build image/ --file image/Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/first-mate:${{ env.NEW_VERSION }}
      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/first-mate:${{ env.NEW_VERSION }}
      # This is last so the version is only modified if the previous steps succeed.
      - name: Update Chart.yaml with the new version
        run: |
          # App version does have quotes around it.
          sed -i "s/^appVersion:.*$/appVersion: \"${{ env.NEW_VERSION }}\"/" chart/first-mate/Chart.yaml
          # Chart version does not have quotes around it.
          sed -i "s/^version:.*$/version: ${{ env.NEW_VERSION }}/" chart/first-mate/Chart.yaml
      - name: Commit the changed file
        run: |
          git config --global user.name 'Chris Wells'
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add chart/first-mate/Chart.yaml
          git commit -m "chore(release): bump version to ${{ env.NEW_VERSION }}"
          git push
      - name: Create a tag and release for the chart
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          charts_dir: chart
