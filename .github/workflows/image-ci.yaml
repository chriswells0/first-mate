name: Image CI

on:
  push:
    branches: [ main ]
    paths: [ image/** ]

jobs:

  build-publish-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        # Use my personal access token so the git push WILL trigger additional workflows.
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
      - name: Increment the current patch version
        run: |
          IMAGE_VERSION=$(awk '$1 == "appVersion:" { print $2; }' chart/first-mate/Chart.yaml | sed 's/"//g')
          IMAGE_VERSION_MAJOR_MINOR=$(echo ${IMAGE_VERSION} | sed -E 's/\.-?[0-9]+$//')
          IMAGE_VERSION_PATCH=$(echo ${IMAGE_VERSION} | sed -E 's/([0-9.]+)(-?[0-9]+)$/\2/')
          NEW_IMAGE_VERSION=${IMAGE_VERSION_MAJOR_MINOR}.$((${IMAGE_VERSION_PATCH}+1))
          echo "NEW_IMAGE_VERSION=${NEW_IMAGE_VERSION}" >> ${GITHUB_ENV}
      - name: Build the Docker image
        run: docker build image/ --file image/Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/first-mate:${{ env.NEW_IMAGE_VERSION }}
      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/first-mate:${{ env.NEW_IMAGE_VERSION }}
      # This is last so the version is only modified if the previous steps succeed.
      - name: Update Chart.yaml with the new image version
        run: |
          sed -i "s/^appVersion:.*$/appVersion: \"${{ env.NEW_IMAGE_VERSION }}\"/" chart/first-mate/Chart.yaml
      - name: Commit the changed file
        run: |
          git config --global user.name 'Chris Wells'
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add chart/first-mate/Chart.yaml
          git commit -m "chore(release): bump image version to ${{ env.NEW_IMAGE_VERSION }}"
          git push
